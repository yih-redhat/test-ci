---
name: CI Test

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created]

jobs:
  check-pull-request:
    if: |
      github.event_name == 'pull_request_target' ||
      (
        github.event_name == 'issue_comment' &&
        github.event.issue.pull_request &&
        endsWith(github.event.comment.body, '/test')
      )
    runs-on: ubuntu-latest
    name: "ðŸ§ª Internal Checks"
    steps:
      - name: Set PR author
        id: set-author
        run: |
          if [ "${{ github.event_name }}" == "pull_request_target" ]; then
            echo "AUTHOR=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV
            echo "PR_NUM=${{ github.event.number }}" >> $GITHUB_ENV
          else
            echo "AUTHOR=${{ github.event.issue.user.login }}" >> $GITHUB_ENV
            echo "PR_NUM=${{ github.event.issue.number }}" >> $GITHUB_ENV
          fi

      - name: Query author repository permissions
        uses: octokit/request-action@v2.x
        id: user_permission
        with:
          route: GET /repos/${{ github.repository }}/collaborators/${{ env.AUTHOR }}/permission
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if user does have correct permissions
        if: contains('admin write', fromJson(steps.user_permission.outputs.data).permission)
        id: check_user_perm
        run: |
          echo "User '${{ env.AUTHOR }}' has permission '${{ fromJson(steps.user_permission.outputs.data).permission }}' allowed values: 'admin', 'write'"
          echo "allowed_user=true" >> $GITHUB_OUTPUT

      - name: Get information for pull request
        uses: octokit/request-action@v2.x
        id: pr-api
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ env.PR_NUM }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      allowed_user: ${{ steps.check_user_perm.outputs.allowed_user }}
      sha: ${{ fromJson(steps.pr-api.outputs.data).head.sha }}
      ref: ${{ fromJson(steps.pr-api.outputs.data).head.ref }}
      repo_url: ${{ fromJson(steps.pr-api.outputs.data).head.repo.html_url }}

  Centos-10-bootc:
    needs: check-pull-request
    if: ${{ needs.check-pull-request.outputs.allowed_user == 'true' }}
    continue-on-error: true
    runs-on: ubuntu-latest

    steps:
      - name: Run the tests
        uses: sclorg/testing-farm-as-github-action@v4
        with:
          compose: CentOS-Stream-10
          api_key: ${{ secrets.TF_API_KEY }}
          github_sha: ${{ needs.check-pull-request.outputs.sha }}
          git_url: ${{ needs.check-pull-request.outputs.repo_url }}
          git_ref: ${{ needs.check-pull-request.outputs.ref }}
          tmt_context: "arch=x86_64;distro=cs-10"
          tmt_plan_regex: bootc
          tf_scope: private
          variables: "ARCH=x86_64"
          timeout: 90

  Fedora-43-bootc:
    needs: check-pull-request
    if: ${{ needs.check-pull-request.outputs.allowed_user == 'true' }}
    continue-on-error: true
    runs-on: ubuntu-latest

    steps:
      - name: Run the tests
        uses: sclorg/testing-farm-as-github-action@v4
        with:
          compose: Fedora-Rawhide
          api_key: ${{ secrets.TF_API_KEY }}
          github_sha: ${{ needs.check-pull-request.outputs.sha }}
          git_url: ${{ needs.check-pull-request.outputs.repo_url }}
          git_ref: ${{ needs.check-pull-request.outputs.ref }}
          tmt_context: "arch=x86_64;distro=fedora-43"
          tmt_plan_regex: bootc
          tf_scope: private
          variables: "ARCH=x86_64"
          timeout: 90

  Centos-9-ostree:
    needs: check-pull-request
    if: ${{ needs.check-pull-request.outputs.allowed_user == 'true' }}
    continue-on-error: true
    runs-on: ubuntu-latest

    steps:
      - name: Run the tests
        uses: sclorg/testing-farm-as-github-action@v4
        with:
          compose: CentOS-Stream-9
          api_key: ${{ secrets.TF_API_KEY }}
          github_sha: ${{ needs.check-pull-request.outputs.sha }}
          git_url: ${{ needs.check-pull-request.outputs.repo_url }}
          git_ref: ${{ needs.check-pull-request.outputs.ref }}
          tmt_context: "arch=x86_64;distro=cs-9"
          tmt_plan_regex: ostree
          tf_scope: private
          variables: "ARCH=x86_64"
          timeout: 90


