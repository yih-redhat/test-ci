name: CI Test

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
  issue_comment:
    types: [created]

jobs:
  check-pull-request:
    # Run for:
    # - PR events (opened/synchronized/reopened)
    # - Comments containing exactly "/test" on PRs
    if: |
      github.event_name == 'pull_request_target' ||
      (
        github.event_name == 'issue_comment' &&
        github.event.issue.pull_request &&
        trim(github.event.comment.body) == '/test'
      )
    runs-on: ubuntu-latest
    steps:
      # Determine PR author from different event contexts
      - name: Set PR author
        id: set-author
        run: |
          if [ "${{ github.event_name }}" == "pull_request_target" ]; then
            echo "AUTHOR=${{ github.event.pull_request.user.login }}" >> $GITHUB_ENV
          else
            echo "AUTHOR=${{ github.event.issue.user.login }}" >> $GITHUB_ENV
          fi

      # Existing permissions check (updated to use the author variable)
      - name: Query author repository permissions
        uses: octokit/request-action@v2.x
        id: user_permission
        with:
          route: GET /repos/${{ github.repository }}/collaborators/${{ env.AUTHOR }}/permission
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if user does have correct permissions
        if: contains('admin write', fromJson(steps.user_permission.outputs.data).permission)
        id: check_user_perm
        run: |
          echo "User '${{ env.AUTHOR }}' has permission '${{ fromJson(steps.user_permission.outputs.data).permission }}' allowed values: 'admin', 'write'"
          echo "allowed_user=true" >> $GITHUB_OUTPUT

      - name: Get information for pull request
        uses: octokit/request-action@v2.x
        id: pr-api
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}