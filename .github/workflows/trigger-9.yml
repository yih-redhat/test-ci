---
name: RHEL 9 compose package trigger

on:
  issue_comment:
    types:
      - created

env:
  COMPOSE_URL_96: "http://${{ secrets.DOWNLOAD_NODE }}/rhel-9/nightly/updates/RHEL-9"

jobs:
  check-compose:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v3

      - run: sudo dnf install -y gh

      - name: Check RHEL 9.6 compose
        id: check_compose_id_96
        run: |
          curl -s ${COMPOSE_URL_96}/latest-RHEL-9.6.0/STATUS --output STATUS_96
          STATUS_96=$(cat STATUS_96)
          if [[ "$STATUS_96" == "FINISHED" ]]; then
              curl -s ${COMPOSE_URL_96}/latest-RHEL-9.6.0/COMPOSE_ID --output COMPOSE_ID_96
              COMPOSE_ID_96=$(cat COMPOSE_ID_96)
              TESTED_COMPOSE_96=( $( cat compose/compose.96 ) )
              if [[ " ${TESTED_COMPOSE_96[*]} " =~ "$COMPOSE_ID_96" ]]; then
                  COMPOSE_ID_96="false"
              fi
          else
              COMPOSE_ID_96="false"
          fi

          if [[ "$COMPOSE_ID_96" != "false" ]]; then
              OSBUILD_VERSION_96=$(curl -s "${COMPOSE_URL_96}/${COMPOSE_ID_96}/compose/AppStream/x86_64/os/Packages/" | grep -ioE ">osbuild-[0-9].*<" | tr -d "><")
              OSBUILD_COMPOSER_VERSION_96=$(curl -s "${COMPOSE_URL_96}/${COMPOSE_ID_96}/compose/AppStream/x86_64/os/Packages/" | grep -ioE ">osbuild-composer-[0-9].*<" | tr -d "><")
              COMPOSER_CLI_VERSION_96=$(curl -s "${COMPOSE_URL_96}/${COMPOSE_ID_96}/compose/AppStream/x86_64/os/Packages/" | grep -ioE ">weldr-client-[0-9].*<" | tr -d "><")
              echo "osbuild_version_96=$OSBUILD_VERSION_96" >> $GITHUB_OUTPUT
              echo "osbuild_composer_version_96=$OSBUILD_COMPOSER_VERSION_96" >> $GITHUB_OUTPUT
              echo "composer_cli_version_96=$COMPOSER_CLI_VERSION_96" >> $GITHUB_OUTPUT

              curl -s ${COMPOSE_URL_96}/ --output COMPOSES
              COMPOSES=$(cat -n COMPOSES)
              line=$(echo "${COMPOSES}" | grep ${COMPOSE_ID_96} | cut -b 1-7)
              old_line=$((line - 1))
              OLD_COMPOSE_ID_96=$(echo "${COMPOSES}" | grep $old_line | tr -d "><" | grep -oP 'RHEL-.+?-updates-\d+\.\d+' | tail -1)

              packages=("osbuild" "osbuild-composer" "weldr-client" "aardvark-dns" "acl" "alternatives" "audit-libs" "bootc" "bootupd" "bubblewrap" "bzip2-libs" "composefs" "conmon" "container-selinux" "containers-common" "coreutils" "cpio" "cracklib" "criu" "crun" "crypto-policies" "cryptsetup-libs" "cyrus-sasl-lib" "dbus" "device-mapper" "diffutils" "dracut" "expat" "file" "filesystem" "findutils" "fuse" "fuse3" "gawk" "gdbm-libs" "gettext" "glib2" "glibc" "gmp" "gnupg2" "gnutls" "gpgme" "grub2-common" "gzip" "iptables-libs" "jansson" "json-c" "json-glib" "kernel-modules" "keyutils-libs" "kmod" "kpartx" "krb5-libs" "libacl" "libarchive" "libassuan" "libattr" "libblkid" "libbrotli" "libcap" "libcom_err" "libcurl" "libdb" "libeconf" "libevent" "libfdisk" "libffi" "libgcc" "libgcrypt" "libgomp" "libgpg-error" "libidn2" "libkcapi" "libksba" "libmnl" "libmodulemd" "libmount" "libnet" "libnetfilter_conntrack" "libnfnetlink" "libnftnl" "libnghttp2" "libnl3" "libpsl" "libpwquality" "librepo" "librhsm" "libseccomp" "libselinux" "libsemanage" "libsepol" "libsigsegv" "libslirp" "libsmartcols" "libsolv" "libssh" "libtasn1" "libtool-ltdl" "libunistring" "libutempter" "libuuid" "libverto" "libxcrypt" "libxcrypt-compat" "libxml2" "libyaml" "libzstd" "lua-libs" "lz4-libs" "mpfr" "ncurses-libs" "netavark" "nettle" "nftables" "npth" "openldap" "openssl" "os-prober" "ostree" "p11-kit" "pam" "passt" "pcre" "pcre2" "pigz" "podman" "policycoreutils" "polkit-libs" "popt" "procps-ng" "protobuf-c" "python3" "readline" "redhat-release" "redhat-release-eula" "rpm" "rpm-libs" "rpm-ostree" "rpm-plugin-selinux" "selinux-policy" "shadow-utils" "skopeo" "slirp4netns" "sqlite-libs" "systemd" "systemd-libs" "systemd-pam" "systemd-udev" "tpm2-tss" "util-linux" "which" "xz" "xz-libs" "yajl" "zlib")
              COMPOSE_ID_96="RHEL-9.6.0-updates-20250616.0"
              OLD_COMPOSE_ID_96="RHEL-9.6.0-updates-20250423.12"
              APPS_URL="${COMPOSE_URL_96}/${COMPOSE_ID_96}/compose/AppStream/x86_64/os/Packages/"
              OLD_APPS_URL="${COMPOSE_URL_96}/${OLD_COMPOSE_ID_96}/compose/AppStream/x86_64/os/Packages/"
              BASEOS_URL="${COMPOSE_URL_96}/${COMPOSE_ID_96}/compose/BaseOS/x86_64/os/Packages/"
              OLD_BASEOS_URL="${COMPOSE_URL_96}/${OLD_COMPOSE_ID_96}/compose/BaseOS/x86_64/os/Packages/"
              special_pkgs=("selinux-policy" "grub2-common" "osbuild" "container-selinux" "crypto-policies" "basesystem" "ca-certificates" "libssh-config" "passt-selinux" "publicsuffix-list-dafsa" "setup" "systemd-rpm-macros" "tzdata")
              updated_pkgs=""
              count=0
              for pkg in "${packages[@]}"; do
                  if [[ " ${special_pkgs[*]} " == *" ${pkg} "* ]]; then
                      if curl -s "${APPS_URL}" | grep -ioE ">${pkg}-[0-9].*<"; then
                          new=$(curl -s "${APPS_URL}" | grep -ioE ">${pkg}-[0-9].*<" | tr -d "><")
                          old=$(curl -s "${OLD_APPS_URL}" | grep -ioE ">${pkg}-[0-9].*<" | tr -d "><")
                          if [[ "$new" == "$old" ]]; then
                              echo "Package ${pkg} not-updated"
                          else
                              updated_pkgs+=$'\n'"${pkg}"
                              count=$((count + 1))
                          fi
                      elif curl -s "${BASEOS_URL}" | grep -ioE ">${pkg}-[0-9].*<"; then
                          new=$(curl -s "${BASEOS_URL}" | grep -ioE ">${pkg}-[0-9].*<" | tr -d "><")
                          old=$(curl -s "${OLD_APPS_URL}" | grep -ioE ">${pkg}-[0-9].*<" | tr -d "><")
                          if [[ "$new" == "$old" ]]; then
                              echo "Package ${pkg} not updated"
                          else
                              updated_pkgs+=$'\n'"${pkg}"
                              count=$((count + 1))
                          fi
                      else
                          echo "NOT FOUND: $pkg" >&2
                      fi
                  else
                      if curl -s "${APPS_URL}" | grep -ioE ">${pkg}-[0-9].*x86_64.*<"; then
                          new=$(curl -s "${APPS_URL}" | grep -ioE ">${pkg}-[0-9].*x86_64.*<" | tr -d "><")
                          old=$(curl -s "${OLD_APPS_URL}" | grep -ioE ">${pkg}-[0-9].*x86_64.*<" | tr -d "><")
                          if [[ "$new" == "$old" ]]; then
                              echo "Package ${pkg} not-updated"
                          else
                              updated_pkgs+=$'\n'"${pkg}"
                              count=$((count + 1))
                          fi
                      elif curl -s "${BASEOS_URL}" | grep -ioE ">${pkg}-[0-9].*x86_64.*<"; then
                          new=$(curl -s "${BASEOS_URL}" | grep -ioE ">${pkg}-[0-9].*x86_64.*<" | tr -d "><")
                          old=$(curl -s "${OLD_APPS_URL}" | grep -ioE ">${pkg}-[0-9].*x86_64.*<" | tr -d "><")
                          if [[ "$new" == "$old" ]]; then
                              echo "Package ${pkg} not updated"
                          else
                              updated_pkgs+=$'\n'"${pkg}"
                              count=$((count + 1))
                          fi
                      else
                          echo "NOT FOUND: $pkg" >&2
                      fi
                  fi
              done
              echo "updated_pkgs<<EOF" >> $GITHUB_OUTPUT
              echo "${updated_pkgs}" >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
              echo "count=$count" >> $GITHUB_OUTPUT
          else
              echo "osbuild_version_96=Null" >> $GITHUB_OUTPUT
              echo "osbuild_composer_version_96=Null" >> $GITHUB_OUTPUT
              echo "composer_cli_version_96=Null" >> $GITHUB_OUTPUT
          fi
          echo "rhel96_compose=$COMPOSE_ID_96" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    outputs:
      rhel96_compose: ${{ steps.check_compose_id_96.outputs.rhel96_compose }}
      osbuild_version_96: ${{ steps.check_compose_id_96.outputs.osbuild_version_96 }}
      osbuild_composer_version_96: ${{ steps.check_compose_id_96.outputs.osbuild_composer_version_96 }}
      composer_cli_version_96: ${{ steps.check_compose_id_96.outputs.composer_cli_version_96 }}
      updated_pkgs: ${{ steps.check_compose_id_96.outputs.updated_pkgs }}
      count: ${{ steps.check_compose_id_96.outputs.count }}


  rhel-9-6:
    needs: check-compose
    if: ${{ needs.check-compose.outputs.rhel96_compose != 'false' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Add new compose id in compose.96
        run: |
          compose_id="${{ needs.check-compose.outputs.rhel96_compose }}"
          echo $compose_id >> compose/compose.96
          cat compose/compose.96

      - name: Get current date
        id: date
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "${{ needs.check-compose.outputs.rhel96_compose }} - ${{ steps.date.outputs.date }}"
          committer: cloudkitebot <henrywangxf1@gmail.com>
          author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          branch: cpr
          branch-suffix: random
          delete-branch: true
          title: "${{ needs.check-compose.outputs.rhel96_compose }} - ${{ steps.date.outputs.date }}"
          labels: auto-merge,RHEL-9.6.0
          body: |
            RHEL 9.6 compose ${{ needs.check-compose.outputs.rhel96_compose }}
            - Date: ${{ steps.date.outputs.date }}
            - Osbuild versions:
                - ${{ needs.check-compose.outputs.osbuild_version_96 }}
                - ${{ needs.check-compose.outputs.osbuild_composer_version_96 }}
                - ${{ needs.check-compose.outputs.composer_cli_version_96 }}
            - Updated packages(${{ needs.check-compose.outputs.count }}):
                    ${{ needs.check-compose.outputs.updated_pkgs }}
