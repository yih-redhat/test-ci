---
- hosts: greenboot_guest
  become: no
  vars:
    total_counter: "0"
    failed_counter: "0"


  tasks:
    # current target host's IP address
    - debug: var=ansible_all_ipv4_addresses
    - debug: var=ansible_facts['distribution_version']
    - debug: var=ansible_facts['distribution']
    - debug: var=ansible_facts['architecture']

    - name: check bootc status
      command: bootc status
      ignore_errors: yes

    # case: check installed greenboot packages
    - name: greenboot should be installed
      block:
        - name: greenboot should be installed
          shell: rpm -qa | grep greenboot
          register: result_greenboot_packages

        - assert:
            that:
              - "'greenboot-0' in result_greenboot_packages.stdout"
              - "'greenboot-default-health-checks' in result_greenboot_packages.stdout"
            fail_msg: "greenboot is not installed"
            success_msg: "greenboot is installed"
      always:
        - set_fact:
            total_counter: "{{ total_counter | int + 1 }}"
      rescue:
        - name: failed count + 1
          set_fact:
            failed_counter: "{{ failed_counter | int + 1 }}"

    # case: check greenboot* services
    - name: greenboot healthcheck service should be enabled
      block:
        - name: greenboot healthcheck service should be enabled
          command: systemctl is-enabled greenboot-healthcheck
          register: result_greenboot_service

        - assert:
            that:
              - result_greenboot_service.stdout == 'enabled'
            fail_msg: "at least one greenboot service is not enabled"
            success_msg: "greenboot services are enabled"
      always:
        - set_fact:
            total_counter: "{{ total_counter | int + 1 }}"
      rescue:
        - name: failed count + 1
          set_fact:
            failed_counter: "{{ failed_counter | int + 1 }}"

      # case: check greenboot* service status
    - name: greenboot healthcheck service should be active
      block:
        - name: greenboot healthcheck service should be active
          command: systemctl is-active greenboot-healthcheck.service
          register: result_greenboot_active

        - assert:
            that:
              - result_greenboot_active.stdout == "active"
            fail_msg: "greenboot healthcheck service is not active"
            success_msg: "greenboot healthcheck service is active"
      always:
        - set_fact:
            total_counter: "{{ total_counter | int + 1 }}"
      rescue:
        - name: failed count + 1
          set_fact:
            failed_counter: "{{ failed_counter | int + 1 }}"

    # case: check boot-complete.target status
    - name: boot-complete.target should be active
      block:
        - name: check boot-complete.target
          command: systemctl --no-pager status boot-complete.target
          become: yes
          register: result
          retries: 10
          delay: 60
          until: "'inactive' not in result.stdout"

      always:
        - set_fact:
            total_counter: "{{ total_counter | int + 1 }}"
      rescue:
        - name: failed count + 1
          set_fact:
            failed_counter: "{{ failed_counter | int + 1 }}"

    # case: check fallback log
    - name: fallback log should be found here
      block:
        - name: fallback log should be found here
          command: journalctl -b -0 -u greenboot -u greenboot-healthcheck
          become: yes
          register: result_greenboot_log

        - assert:
            that:
              - "'FALLBACK BOOT DETECTED! Default bootc deployment has been rolled back' in result_greenboot_log.stdout"
            fail_msg: "Fallback log not found"
            success_msg: "Found fallback log"

      always:
        - set_fact:
            total_counter: "{{ total_counter | int + 1 }}"
      rescue:
        - name: failed count + 1
          set_fact:
            failed_counter: "{{ failed_counter | int + 1 }}"

    # case: check disable health checks
    - name: check disable health checks
      block:
        - name: disable health checks log should be found here
          shell: journalctl -b -0 -u greenboot -u greenboot-healthcheck
          become: yes
          register: result_disable

        - assert:
            that:
              - "'Skipping disabled script: 01_repository_dns_check.sh' in result_disable.stdout"
              - "'The following disabled scripts were not found in any directory: [\"not_exit.sh\"]' in result_disable.stdout"
            fail_msg: "Disable health checks log not found"
            success_msg: "Found disable health checks log"

      always:
        - set_fact:
            total_counter: "{{ total_counter | int + 1 }}"
      rescue:
        - name: failed count + 1
          set_fact:
            failed_counter: "{{ failed_counter | int + 1 }}"

    # case: fail early for any required script failure
    - name: check greenboot fail early for any required script failure
      block:
        - name: fail early log should be found here
          shell: journalctl -u greenboot-healthcheck.service
          become: yes
          register: result_early

        - assert:
            that:
              - "'Greenboot error: required health-check failed, skipping remaining scripts' in result_early.stdout"
            fail_msg: "Fail early health checks log not found"
            success_msg: "Found fail early checks log"

      always:
        - set_fact:
            total_counter: "{{ total_counter | int + 1 }}"
      rescue:
        - name: failed count + 1
          set_fact:
            failed_counter: "{{ failed_counter | int + 1 }}"

    # case: check binary file support
    - name: check binary file support
      block:
        - name: binary file check result should be found here
          shell: journalctl -b -0 -u greenboot -u greenboot-healthcheck
          become: yes
          register: result_binary

        - assert:
            that:
              - "'required script /etc/greenboot/check/required.d/passing_binary success!' in result_binary.stdout"
              - "'wanted script /etc/greenboot/check/wanted.d/failing_binary failed!' in result_binary.stdout"
            fail_msg: "Binary file check log not found"
            success_msg: "Found binary file check log"

      always:
        - set_fact:
            total_counter: "{{ total_counter | int + 1 }}"
      rescue:
        - name: failed count + 1
          set_fact:
            failed_counter: "{{ failed_counter | int + 1 }}"

    # case: check boot times
    - name: check boot times
      block:
        - name: check boot times
          shell: journalctl --list-boots | wc -l
          register: boot_time_log

        - assert:
            that:
              - boot_time_log.stdout == '9'
            fail_msg: "boot times is not correct, please check configuration in /etc/greenboot/greenboot.conf"
            success_msg: "boot times is correct"

      always:
        - set_fact:
            total_counter: "{{ total_counter | int + 1 }}"
      rescue:
        - name: failed count + 1
          set_fact:
            failed_counter: "{{ failed_counter | int + 1 }}"

    # case: check grubenv variable
    - name: grubenv variables should contain boot_success=1
      block:
        - name: grubenv variables should contain boot_success=1
          command: grub2-editenv list
          register: result_grubenv
          become: yes

        - assert:
            that:
              - "'boot_success=1' in result_grubenv.stdout"
            fail_msg: "Not found boot_success=1"
            success_msg: "Found boot_success=1"
      always:
        - set_fact:
            total_counter: "{{ total_counter | int + 1 }}"
      rescue:
        - name: failed count + 1
          set_fact:
            failed_counter: "{{ failed_counter | int + 1 }}"

    - assert:
        that:
          - failed_counter == "0"
        fail_msg: "Run {{ total_counter }} tests, but {{ failed_counter }} of them failed"
        success_msg: "Totally {{ total_counter }} test passed"
